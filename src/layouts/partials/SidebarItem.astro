---
import type { SidebarNavItem } from "@/lib/components/types";
import UpDownSVGArrow from "./UpDownSVGArrow.astro";
import SidebarSubItem from "./SidebarSubItem.astro";

interface Props {
  items: SidebarNavItem[];
}

const { items } = Astro.props;

console.log("sideBarItem", items);
---

{
  items?.map((item) => {
    return (
        <li class="hs-accordion" id={item.title + "-accordion"}>
          <button
            type="button"
            class="hs-accordion-toggle w-full text-start flex items-center gap-x-3.5 py-2 px-2.5 text-sm text-gray-800 rounded-lg hover:bg-gray-100 focus:outline-none focus:bg-gray-100 dark:bg-neutral-800 dark:hover:bg-neutral-700 dark:text-neutral-200"
            aria-expanded="true"
            aria-controls={item.title + "-accordion-child"}
          >
            <svelte:component this={item.icon} class="mr-2 mt-[2px] h-6 w-6" />
            {item.title}
            {item.items && <UpDownSVGArrow />}
          </button>

          <div
            id={item.title + "-accordion-child"}
            class="hs-accordion-content w-full overflow-hidden transition-[height] duration-300 hidden"
            role="region"
            aria-labelledby={item.title + "-accordion"}
          >
            <ul
              class="hs-accordion-group ps-8 pt-1 space-y-1"
              data-hs-accordion-always-open
            >
              {item.items && <SidebarSubItem subItems={item.items} />}
             </ul>
          </div>
        </li>
    );
  })
}
